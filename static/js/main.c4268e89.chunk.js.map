{"version":3,"sources":["Components/feedbackOptions/FeedbackOptions.js","Components/notification/Notification.js","Components/section/Section.js","Components/statistics/Statistics.js","Components/App.js","index.js","Components/feedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","addFeedback","options","map","option","className","s","btn","type","name","onClick","Notification","message","Section","children","title","Statistics","good","neutral","bad","total","positivePercentage","initialState","App","useState","state","setState","countTotalFeedback","totalFeedback","Number","toFixed","countPositiveFeedbackPercentage","Object","keys","e","target","prev","ReactDOM","render","document","getElementById","module","exports"],"mappings":"iRAsBeA,EAlBS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACtC,OACE,mCACGA,EAAQC,KAAI,SAACC,GAAD,OACX,wBACEC,UAAWC,IAAEC,IACbC,KAAK,SACLC,KAAML,EACNM,QAAST,EAJX,SAOGG,GAFIA,SCNAO,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCQEC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,qCACE,6BAAKA,IACJD,MCQQE,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YCFAC,G,MAAe,CACnBL,KAAM,EACNC,QAAS,EACTC,IAAK,IAoDQI,EAjDH,WACV,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAQMC,EAAqB,WAGzB,OAF+BF,EAAvBN,IAAuBM,EAAlBR,KAAkBQ,EAAZP,SAafU,EAAgBD,IAChBN,EATkC,WACtC,IAAQJ,EAASQ,EAATR,KAEFI,EAAqBJ,EAAe,IAAPA,EAAcU,IAAuB,EAExE,OAAOE,OAAOR,GAAoBS,UAITC,GACrB7B,EAAU8B,OAAOC,KAAKR,GAE5B,OACE,sBAAKpB,UAAU,UAAf,UACE,cAAC,EAAD,CAASU,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBd,YA3BH,SAACiC,GACnB,IAAQzB,EAASyB,EAAEC,OAAX1B,KAERiB,GAAS,SAACU,GAAD,mBAAC,eAAeA,GAAhB,kBAAuB3B,EAAO2B,EAAK3B,GAAQ,QAwBLP,QAASA,MAEtD,cAAC,EAAD,CAASa,MAAM,aAAf,SACqB,IAAlBa,EACC,cAAC,EAAD,CACEX,KAAMQ,EAAMR,KACZC,QAASO,EAAMP,QACfC,IAAKM,EAAMN,IACXC,MAAOQ,EACPP,mBAAoBA,IAGtB,cAAC,EAAD,CAAcT,QAAQ,4B,MCnDhCyB,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.c4268e89.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ addFeedback, options }) => {\n  return (\n    <>\n      {options.map((option) => (\n        <button\n          className={s.btn}\n          type=\"button\"\n          name={option}\n          onClick={addFeedback}\n          key={option}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  );\n};\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  addFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ children, title }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage} %</p>\n    </>\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    .isRequired,\n};\n","import React, { useState } from \"react\";\nimport FeedbackOptions from \"./feedbackOptions/FeedbackOptions\";\nimport Notification from \"./notification/Notification\";\n\nimport Section from \"./section/Section\";\nimport Statistics from \"./statistics/Statistics\";\nimport \"./App.css\";\n\nconst initialState = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n};\n\nconst App = () => {\n  const [state, setState] = useState(initialState);\n\n  const addFeedback = (e) => {\n    const { name } = e.target;\n\n    setState((prev) => ({ ...prev, [name]: prev[name] + 1 }));\n  };\n\n  const countTotalFeedback = () => {\n    const { bad, good, neutral } = state;\n    const total = bad + good + neutral;\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const { good } = state;\n\n    const positivePercentage = good ? (good * 100) / countTotalFeedback() : 0;\n\n    return Number(positivePercentage).toFixed();\n  };\n\n  const totalFeedback = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage();\n  const options = Object.keys(state);\n\n  return (\n    <div className=\"section\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions addFeedback={addFeedback} options={options} />\n      </Section>\n      <Section title=\"Statistics\">\n        {totalFeedback !== 0 ? (\n          <Statistics\n            good={state.good}\n            neutral={state.neutral}\n            bad={state.bad}\n            total={totalFeedback}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './index.css';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__3tYaU\"};"],"sourceRoot":""}